{"id":"../node_modules/@tonaljs/mode/dist/index.es.js","dependencies":[{"name":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\mode\\dist\\index.es.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\package.json","includedInParent":true,"mtime":1640126285771},{"name":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\mode\\package.json","includedInParent":true,"mtime":1640125855315},{"name":"@tonaljs/collection","loc":{"line":1,"column":23},"parent":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\mode\\dist\\index.es.js","resolved":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\collection\\dist\\index.es.js"},{"name":"@tonaljs/core","loc":{"line":2,"column":37},"parent":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\mode\\dist\\index.es.js","resolved":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\core\\dist\\index.es.js"},{"name":"@tonaljs/interval","loc":{"line":3,"column":42},"parent":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\mode\\dist\\index.es.js","resolved":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\interval\\dist\\index.es.js"},{"name":"@tonaljs/pcset","loc":{"line":4,"column":27},"parent":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\mode\\dist\\index.es.js","resolved":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\pcset\\dist\\index.es.js"},{"name":"@tonaljs/scale-type","loc":{"line":5,"column":29},"parent":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\mode\\dist\\index.es.js","resolved":"C:\\Users\\222da\\Desktop\\Dalby\\Projekty\\Web\\My Projects\\chess-soundboard\\node_modules\\@tonaljs\\scale-type\\dist\\index.es.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.all = all;\nexports.default = void 0;\nexports.distance = distance;\nexports.entries = void 0;\nexports.get = get;\nexports.mode = void 0;\nexports.names = names;\nexports.notes = notes;\nexports.relativeTonic = relativeTonic;\nexports.triads = exports.seventhChords = void 0;\n\nvar _collection = require(\"@tonaljs/collection\");\n\nvar _core = require(\"@tonaljs/core\");\n\nvar _interval = require(\"@tonaljs/interval\");\n\nvar _pcset = require(\"@tonaljs/pcset\");\n\nvar _scaleType = require(\"@tonaljs/scale-type\");\n\nconst MODES = [[0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"], [1, 2902, 2, \"dorian\", \"m\", \"m7\"], [2, 3418, 4, \"phrygian\", \"m\", \"m7\"], [3, 2741, -1, \"lydian\", \"\", \"Maj7\"], [4, 2774, 1, \"mixolydian\", \"\", \"7\"], [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"], [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"]];\nconst NoMode = { ..._pcset.EmptyPcset,\n  name: \"\",\n  alt: 0,\n  modeNum: NaN,\n  triad: \"\",\n  seventh: \"\",\n  aliases: []\n};\nconst modes = MODES.map(toMode);\nconst index = {};\nmodes.forEach(mode => {\n  index[mode.name] = mode;\n  mode.aliases.forEach(alias => {\n    index[alias] = mode;\n  });\n});\n/**\r\n * Get a Mode by it's name\r\n *\r\n * @example\r\n * get('dorian')\r\n * // =>\r\n * // {\r\n * //   intervals: [ '1P', '2M', '3m', '4P', '5P', '6M', '7m' ],\r\n * //   modeNum: 1,\r\n * //   chroma: '101101010110',\r\n * //   normalized: '101101010110',\r\n * //   name: 'dorian',\r\n * //   setNum: 2902,\r\n * //   alt: 2,\r\n * //   triad: 'm',\r\n * //   seventh: 'm7',\r\n * //   aliases: []\r\n * // }\r\n */\n\nfunction get(name) {\n  return typeof name === \"string\" ? index[name.toLowerCase()] || NoMode : name && name.name ? get(name.name) : NoMode;\n}\n\nconst mode = (0, _core.deprecate)(\"Mode.mode\", \"Mode.get\", get);\n/**\r\n * Get a list of all modes\r\n */\n\nexports.mode = mode;\n\nfunction all() {\n  return modes.slice();\n}\n\nconst entries = (0, _core.deprecate)(\"Mode.mode\", \"Mode.all\", all);\n/**\r\n * Get a list of all mode names\r\n */\n\nexports.entries = entries;\n\nfunction names() {\n  return modes.map(mode => mode.name);\n}\n\nfunction toMode(mode) {\n  const [modeNum, setNum, alt, name, triad, seventh, alias] = mode;\n  const aliases = alias ? [alias] : [];\n  const chroma = Number(setNum).toString(2);\n  const intervals = (0, _scaleType.get)(name).intervals;\n  return {\n    empty: false,\n    intervals,\n    modeNum,\n    chroma,\n    normalized: chroma,\n    name,\n    setNum,\n    alt,\n    triad,\n    seventh,\n    aliases\n  };\n}\n\nfunction notes(modeName, tonic) {\n  return get(modeName).intervals.map(ivl => (0, _core.transpose)(tonic, ivl));\n}\n\nfunction chords(chords) {\n  return (modeName, tonic) => {\n    const mode = get(modeName);\n    if (mode.empty) return [];\n    const triads = (0, _collection.rotate)(mode.modeNum, chords);\n    const tonics = mode.intervals.map(i => (0, _core.transpose)(tonic, i));\n    return triads.map((triad, i) => tonics[i] + triad);\n  };\n}\n\nconst triads = chords(MODES.map(x => x[4]));\nexports.triads = triads;\nconst seventhChords = chords(MODES.map(x => x[5]));\nexports.seventhChords = seventhChords;\n\nfunction distance(destination, source) {\n  const from = get(source);\n  const to = get(destination);\n  if (from.empty || to.empty) return \"\";\n  return (0, _interval.simplify)((0, _interval.transposeFifths)(\"1P\", to.alt - from.alt));\n}\n\nfunction relativeTonic(destination, source, tonic) {\n  return (0, _core.transpose)(tonic, distance(destination, source));\n}\n\nvar index$1 = {\n  get,\n  names,\n  all,\n  distance,\n  relativeTonic,\n  notes,\n  triads,\n  seventhChords,\n  // deprecated\n  entries,\n  mode\n};\nexports.default = index$1;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"35759a6d44d6cdab12a30a0bc8aa25e5","cacheData":{"env":{}}}